// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Water_plant_BackEnd.Infrastructure;

#nullable disable

namespace Water_plant_BackEnd.Migrations
{
    [DbContext(typeof(WaterPlantContext))]
    partial class WaterPlantContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Water_plant_BackEnd.Models.WaterPlantDetail", b =>
                {
                    b.Property<int>("pId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pId"), 1L, 1);

                    b.Property<bool>("isWatering")
                        .HasColumnType("bit");

                    b.Property<string>("pName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("waterInterval")
                        .HasColumnType("int");

                    b.Property<string>("waterStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("waterTime")
                        .HasColumnType("datetime2");

                    b.HasKey("pId");

                    b.ToTable("WaterPlantDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
